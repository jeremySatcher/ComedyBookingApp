@model ComedyBookingApp.Models.ViewModels.ComedianShowVM
@{
    ViewData["Title"] = "Upsert";
    var title = "Create Comedian Show";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<form method="post" asp-action="Upsert" enctype="multipart/form-data">
    <div class="row px-2 mx-2 blackgroundWhite border">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        @if (Model.ComedianShow.Id != 0)
        {
            <input type="hidden" asp-for="ComedianShow.Id" />
            title = "Edit Comedian Show";
        }

        <div class="col-12">
            <h2 class="text-primary">@title</h2>
            <br />
        </div>
        <div class="col-8">
            <div class="form-group row">
                <div class="col-4">
                    <label asp-for="ComedianShow.ComedianId">Show Comedian is on</label>
                </div>
                <div class="col-8">
                    @Html.DropDownListFor(m => m.ComedianShow.EventId, Model.EventList, "- Select an event -", new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group row">
                <div class="col-4">
                    <label asp-for="ComedianShow.ComedianId">Comedian</label>
                </div>
                <div class="col-8">
                    @Html.DropDownListFor(m => m.ComedianShow.ComedianId, Model.ComedianList, "- Select a comedian -", new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group row">
                <div class="col-8 offset-4">
                    @if (Model.ComedianShow.Id != 0)
                    {
                        <partial name="_EditAndBackToListButton" model="Model.ComedianShow.Id" />
                    }
                    else
                    {
                        <partial name="_CreateAndBackToListButton" />
                    }
                </div>
            </div>
        </div>
    </div>
</form>



